# Playwright Python API

# Hidden property
Parameter not documented: Browser.new_context(default_browser_type=)
Parameter not documented: Browser.new_page(default_browser_type=)

# We don't expand the type of the return value here.
Parameter type mismatch in Accessibility.snapshot(return=): documented as Optional[{role: str, name: str, value: Optional[float, str], description: Optional[str], keyshortcuts: Optional[str], roledescription: Optional[str], valuetext: Optional[str], disabled: Optional[bool], expanded: Optional[bool], focused: Optional[bool], modal: Optional[bool], multiline: Optional[bool], multiselectable: Optional[bool], readonly: Optional[bool], required: Optional[bool], selected: Optional[bool], checked: Optional["mixed", bool], pressed: Optional["mixed", bool], level: Optional[int], valuemin: Optional[float], valuemax: Optional[float], autocomplete: Optional[str], haspopup: Optional[str], invalid: Optional[str], orientation: Optional[str], children: Optional[List[Dict]]}], code has Optional[Dict]

# One vs two arguments in the callback, Python explicitly unions.
Parameter type mismatch in BrowserContext.route(handler=): documented as Callable[[Route, Request], Any], code has Union[Callable[[Route, Request], Any], Callable[[Route], Any]]
Parameter type mismatch in BrowserContext.unroute(handler=): documented as Optional[Callable[[Route, Request], Any]], code has Optional[Callable[[Route, Request], Any], Callable[[Route], Any]]
Parameter type mismatch in Page.route(handler=): documented as Callable[[Route, Request], Any], code has Union[Callable[[Route, Request], Any], Callable[[Route], Any]]
Parameter type mismatch in Page.unroute(handler=): documented as Optional[Callable[[Route, Request], Any]], code has Optional[Callable[[Route, Request], Any], Callable[[Route], Any]]

# Get vs set cookies
Parameter type mismatch in BrowserContext.storage_state(return=): documented as {cookies: List[{name: str, value: str, domain: str, path: str, expires: float, httpOnly: bool, secure: bool, sameSite: Union["Lax", "None", "Strict"]}], origins: List[{origin: str, localStorage: List[{name: str, value: str}]}]}, code has {cookies: Optional[List[{name: str, value: str, url: Optional[str], domain: Optional[str], path: Optional[str], expires: Optional[float], httpOnly: Optional[bool], secure: Optional[bool], sameSite: Optional["Lax", "None", "Strict"]}]], origins: Optional[List[{origin: str, localStorage: List[{name: str, value: str}]}]]}
Parameter type mismatch in BrowserContext.cookies(return=): documented as List[{name: str, value: str, domain: str, path: str, expires: float, httpOnly: bool, secure: bool, sameSite: Union["Lax", "None", "Strict"]}], code has List[{name: str, value: str, url: Optional[str], domain: Optional[str], path: Optional[str], expires: Optional[float], httpOnly: Optional[bool], secure: Optional[bool], sameSite: Optional["Lax", "None", "Strict"]}]
# Temporary Fix
Method not implemented: Error.name
Method not implemented: Error.stack
Method not implemented: Error.message
